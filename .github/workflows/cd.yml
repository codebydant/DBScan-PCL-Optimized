name: CD (continuous delivery)

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  IMAGE_NAME: dbscan-octrees

jobs:
  ci:
    uses: ./.github/workflows/lint_and_test.yml
  deploy:
    runs-on: ubuntu-22.04
    needs: [ci]
    name: cd / Deploy

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Artifact (with permissions)
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/install
          key: artifacts-${{ github.run_id }}-${{ github.run_number }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.release.ubuntu
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/danieltobon43/${{ env.IMAGE_NAME }}:sha-${GITHUB_SHA::7}
          cache-to: type=inline

      - name: Test image
        run: |
          docker run --rm \
          --env="DISPLAY" \
          --env="QT_X11_NO_MITSHM=1" \
          --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
          ghcr.io/danieltobon43/${{ env.IMAGE_NAME }}:sha-${GITHUB_SHA::7}

      - name: Push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.release.ubuntu
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
